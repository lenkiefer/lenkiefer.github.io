<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fun on Len Kiefer</title>
    <link>http://lenkiefer.com/tags/fun/</link>
    <description>Recent content in Fun on Len Kiefer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Len Kiefer</copyright>
    <lastBuildDate>Thu, 27 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://lenkiefer.com/tags/fun/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mortgage Rate Kandinsky</title>
      <link>http://lenkiefer.com/2017/07/27/kandinsky/</link>
      <pubDate>Thu, 27 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/07/27/kandinsky/</guid>
      <description>THINGS ARE ABOUT TO GET A BIT MORE ABSTRACT IN THIS SPACE. Today we make some Kandinsky-style images with R.
This summer I was fortunate to spend some time at the Pompidou Centre in Paris. The Pompidou Centre houses the largest collection of modern art in Europe. I really enjoyed their collection of abstract and minimalist paintings.
Well, turns out we can make our own abstract-style art using a Kandinsky R package from Giora Simchoni.</description>
    </item>
    
    <item>
      <title>Index starting points and dataviz</title>
      <link>http://lenkiefer.com/2017/05/23/index-start/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/05/23/index-start/</guid>
      <description>SO WE HAVE BEEN PLOTTING A LOT OF INDEX VALUES LATELY. It’s been great. But you have questions. Great questions.
I got an interesting response to my house price dot chart over Twitter regarding the house price index we were plotting. User [@chrisschnabel](https://twitter.com/chrisschnabel) wondered how the choice of starting point influenced how the house price dot chart looked.
@lenkiefer This is a great viz, but conclusions will be drawn based on the date of the index.</description>
    </item>
    
    <item>
      <title>What&#39;s that on the horizon? An awesome dataviz!</title>
      <link>http://lenkiefer.com/2017/04/23/horizon/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/04/23/horizon/</guid>
      <description>This post is everything you want
it’s everything you need
it’s every viz inside of you that you wish you could see
it’s all the right viz at exactly the right time
but it means nothing to you and you don’t know why
LET US MAKE SOME HORIZON CHARTS.
What is a horizon chart you ask? That’s exactly what I was thinking earlier this weekend. Well, not exactly. I sort of knew what horizon charts were, but I couldn’t say exactly what they were good for.</description>
    </item>
    
    <item>
      <title>Treemapify those pies!</title>
      <link>http://lenkiefer.com/2017/04/22/treemapify-those-pies/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/04/22/treemapify-those-pies/</guid>
      <description>TIME FOR ANOTHER DATAVIZ REMIX. Saw on Twitter that [@hrbrmstr](https://twitter.com/hrbrmstr) posted a remix of a Wall Street Journal visualization over at rud.is.
The original WSJ article used pies of various size to compare recent store closings.
As we usually do in this space, we’ll use R to create our plots.
Let’s mix things up and go remix the remix.
PiesBut first let’s consider the original.
I’m not going to copy the original from the WSJ (click the link above to check out the story), but I am going to make my own pie version.</description>
    </item>
    
    <item>
      <title>Let&#39;s Pixelate America</title>
      <link>http://lenkiefer.com/2017/04/17/pixel-map/</link>
      <pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/04/17/pixel-map/</guid>
      <description>LET’S PIXELATE AMERICA. This morning I happened across a fun blog post on how to generate Pixel maps with R via R weekly.
The basic code is so easy, all you need is ggplot2 (which I get from the tidyverse).
library(tidyverse)## Loading tidyverse: ggplot2## Loading tidyverse: tibble## Loading tidyverse: tidyr## Loading tidyverse: readr## Loading tidyverse: purrr## Loading tidyverse: dplyr## Conflicts with tidy packages ----------------------------------------------## filter(): dplyr, stats## lag(): dplyr, statsggplot(map_data(&amp;quot;state&amp;quot;), aes(round(long, 0),round(lat,0), group=group, fill = as.</description>
    </item>
    
    <item>
      <title>Mortgage rates after dark</title>
      <link>http://lenkiefer.com/2017/04/14/after-dark/</link>
      <pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/04/14/after-dark/</guid>
      <description>TONIGHT WE VISUALIZE MORTGAGE RATES AFTER DARK. Last year I shared 10 amazing ways to visualize mortgage rates (and more ways and even more ways). In this post I have one more DATA VISUALIZATION (dataviz) for you.
I was putting together a presentation using remark.js via the xaringan R package (see my discussion of how to do this in this post) and decided to try a dark theme. The code below, modifies our mortgage rate code to make this graph:</description>
    </item>
    
    <item>
      <title>Experimenting with expanding axes</title>
      <link>http://lenkiefer.com/2017/02/11/expanding-axis/</link>
      <pubDate>Sat, 11 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/02/11/expanding-axis/</guid>
      <description>LET US EXPERIMENT A BIT WITH AXES. In this post I’m going to try out some data visualization ideas expanding on our earlier work with ticks marks (see post ticks out).
We’re going to make the following plot and some variations with R. As before, we’ll use data we used in our mortgage rate post to explore weekly average mortgage rates in the United States based on Freddie Mac’s Primary Mortgage Market Survey.</description>
    </item>
    
    <item>
      <title>House prices are highest in coastal metros</title>
      <link>http://lenkiefer.com/2017/02/09/coastal-metros/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2017/02/09/coastal-metros/</guid>
      <description>TODAY THE NATIONAL ASSOCIATION OF REALTORS (NAR) released (press release) data on metro area median sales prices of existing single-family homes (the U.S. Census and HUD report data on new home sales prices in a joint release). NAR makes the data available (Excel file).
Let’s take a look at the data:
## Warning: Removed 1 rows containing missing values (position_stack).## Warning: Removed 1 rows containing missing values (geom_text).## Warning in grid.</description>
    </item>
    
    <item>
      <title>Populous metros are heavy!</title>
      <link>http://lenkiefer.com/2016/12/23/populous-metros-are-heavy/</link>
      <pubDate>Fri, 23 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://lenkiefer.com/2016/12/23/populous-metros-are-heavy/</guid>
      <description>I WANT TO SHARE WITH YOU a little bit of code to make this whimsical data visualization:
Make a simple mapFirst we can construct a map of the lower 48 U.S. states and add a marker for each city. These data are available in the us.cities data that come with the maps package.
library(tidyverse)library(maps)data(us.cities) # get us city data from the package maps# drop AK and HI to get the lower 48 states:us.</description>
    </item>
    
  </channel>
</rss>